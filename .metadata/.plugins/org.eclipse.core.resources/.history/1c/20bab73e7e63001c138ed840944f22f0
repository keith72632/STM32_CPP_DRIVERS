/*
 * scb.h
 *
 *  Created on: Dec 20, 2021
 *      Author: khorton
 */

#ifndef SCB_H_
#define SCB_H_

#include <stdint.h>


namespace SCB {
	typedef struct CPUID {
		//TODO
		uint32_t stuff;
	}CPUID_t;

	typedef struct ICSR {
		uint32_t stuff;
	}ICSR_t;

	typedef struct VTOR {
		uint32_t stuff;
	}VTOR_t;

	typedef struct AIRCR {
		uint32_t stuff;
	}AIRCR_t;

	typedef struct SCR {
		uint32_t stuff;
	}SCR_t;

	typedef struct CCR {
		uint32_t stuff;
	}CCR_t;
	typedef struct SHCRS{
		uint32_t mem_fault_act    :1;
		uint32_t bus_fault_act    :1;
		uint32_t reserved         :1;
		uint32_t usage_fault_act  :1;
		uint32_t reserved2        :3;
		uint32_t svc_call_act     :1;
		uint32_t monitor_act      :1;
		uint32_t resevered3       :1;
		uint32_t pendsvc_act      :1;
		uint32_t systick_act      :1;
		uint32_t usage_fault_pend :1;
		uint32_t mem_fault_pend   :1;
		uint32_t bus_fault_pend   :1;
		uint32_t svc_call_pend    :1;
		uint32_t mem_fault_ena    :1;
		uint32_t bus_fault_ena    :1;
		uint32_t usage_fault_ena  :1;
		void mem_fault_enable();
		void bus_fault_enable();
		void usg_fault_enable();
	}SHCRS_t;

	//TODO finish this thing
	typedef struct SCB {
		SHCRS_t shcrs;
	}__attribute__((packed))SCB_t;
}

#endif /* SCB_H_ */
